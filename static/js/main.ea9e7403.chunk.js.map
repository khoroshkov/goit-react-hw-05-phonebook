{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/transitions/pop.module.css","components/Filter/Filter.module.css","components/Notification/Notification.module.css","components/transitions/slide.module.css","components/transitions/slideError.module.css","components/Title/Title.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Notification/Notificaation.jsx","utility/filterContacts.js","components/App.jsx","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Title","ContactForm","state","name","number","handleInput","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","this","className","styles","contactForm","onSubmit","type","contactInput","onChange","required","mask","placeholder","addButton","PureComponent","ContactList","contacts","onDeleteContact","TransitionGroup","component","listContacts","map","id","CSSTransition","key","timeout","unmountOnExit","classNames","popTransition","nameField","phoneField","deleteBtn","onClick","Filter","onChangeFilter","length","in","filterForm","filterContact","Notification","notificationContainer","notificationMessage","filterContacts","filter","contact","toLowerCase","includes","uuidv1","require","App","isLoading","isExist","changeFilter","addContact","newContact","some","setTimeout","contactToAdd","deleteContact","savedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","contactsWrapper","slide","slideError","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea9e7403.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsWrapper\":\"ContactForm_contactsWrapper__2sfgt\",\"contactForm\":\"ContactForm_contactForm__3PAW3\",\"contactInput\":\"ContactForm_contactInput__2AAnR\",\"addButton\":\"ContactForm_addButton__176-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__2oDLG\",\"enterActive\":\"pop_enterActive__DQPKS\",\"exit\":\"pop_exit__3OrSK\",\"exitActive\":\"pop_exitActive__3zeBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"Filter_filterForm__10Xw5\",\"filterContact\":\"Filter_filterContact__2CwL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationContainer\":\"Notification_notificationContainer__3gVIZ\",\"notificationMessage\":\"Notification_notificationMessage__PIXhC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3pj4P\",\"enterActive\":\"slide_enterActive__10pd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideError_enter__3owsR\",\"enterActive\":\"slideError_enterActive__3br5j\",\"exit\":\"slideError_exit__1h2j0\",\"exitActive\":\"slideError_exitActive__2d8k3\"};","import React from \"react\";\r\n\r\nconst Title = () => (\r\n  <div>\r\n    <h1>Phonebook</h1>\r\n  </div>\r\n);\r\n\r\nexport default Title;\r\n","import React, { PureComponent } from \"react\";\r\nimport InputTelMask from \"react-input-mask\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends PureComponent {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className={styles.contactInput}\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={this.handleInput}\r\n          required\r\n        />\r\n        <label>Phone number</label>\r\n        <InputTelMask\r\n          mask=\"999-99-99\"\r\n          type=\"tel\"\r\n          className={styles.contactInput}\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={this.handleInput}\r\n          placeholder=\"only numbers\"\r\n          required\r\n        />\r\n        <input type=\"submit\" className={styles.addButton} value=\"Add contact\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport popTransition from \"../transitions/pop.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.listContacts}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <CSSTransition\r\n        key={id}\r\n        timeout={250}\r\n        unmountOnExit\r\n        classNames={popTransition}\r\n      >\r\n        <li key={id} className={styles.contacts}>\r\n          <span className={styles.nameField}>{name}</span>\r\n          <span className={styles.phoneField}>{number}</span>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.deleteBtn}\r\n            value={id}\r\n            onClick={onDeleteContact}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport popTransition from \"../transitions/pop.module.css\";\r\n\r\nconst Filter = ({ contacts, value, onChangeFilter }) =>\r\n  contacts.length > 2 && (\r\n    <CSSTransition in={true} timeout={250} unmountOnExit classNames={popTransition}>\r\n    <form className={styles.filterForm}>\r\n      <label>Find contact by name</label>\r\n      <input\r\n        type=\"text\"\r\n        className={styles.filterContact}\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </form>\r\n    </CSSTransition>\r\n  );\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = () => (\r\n  <div className={styles.notificationContainer}>\r\n    <p className={styles.notificationMessage}>This contact already exists!</p>\r\n  </div>\r\n);\r\n\r\nexport default Notification;\r\n","const filterContacts = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n};\r\nexport default filterContacts;\r\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Title from \"./Title/Title\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport Notification from \"./Notification/Notificaation\";\nimport styles from \"./ContactForm/ContactForm.module.css\";\nimport slide from \"./transitions/slide.module.css\";\nimport slideError from \"./transitions/slideError.module.css\";\nimport filterContacts from \"../utility/filterContacts\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\n    ],\n    filter: \"\",\n    isLoading: false,\n    isExist: false\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem(\"contacts\");\n\n    setTimeout(() => {\n      this.setState({ isLoading: true });\n    }, 0);\n\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = contact => {\n    const newContact = contact.name;\n    const { contacts } = this.state;\n\n    if (contacts.some(contact => contact.name === newContact)) {\n      this.setState({ isExist: true });\n\n      setTimeout(() => {\n        this.setState({ isExist: false });\n      }, 2000);\n    } else {\n      const contactToAdd = {\n        ...contact,\n        id: uuidv1()\n      };\n\n      this.setState(state => ({\n        contacts: [...state.contacts, contactToAdd]\n      }));\n    }\n  };\n\n  deleteContact = e => {\n    const id = e.target.value;\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id)\n    }));\n  };\n\n  render() {\n    const { contacts, filter, isLoading, isExist } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <div className={styles.contactsWrapper}>\n        <CSSTransition\n          in={isLoading}\n          timeout={500}\n          classNames={slide}\n          unmountOnExit\n        >\n          <Title />\n        </CSSTransition>\n        <CSSTransition\n          in={isExist}\n          timeout={250}\n          classNames={slideError}\n          unmountOnExit\n        >\n          <Notification />\n        </CSSTransition>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter\n          contacts={contacts}\n          value={filter}\n          onChangeFilter={this.changeFilter}\n        />\n        <ContactList\n          id={contacts.id}\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContacts\":\"ContactList_listContacts__mDvQN\",\"contacts\":\"ContactList_contacts__3pl2w\",\"nameField\":\"ContactList_nameField__2KcCZ\",\"phoneField\":\"ContactList_phoneField__3RFVs\",\"deleteBtn\":\"ContactList_deleteBtn__LI6pV\"};"],"sourceRoot":""}